.flex-container {
  /* 01 This is a flex container. */
  /* 02 "display" set an element flex of grid. */
  display: flex;
}
.flex-container div {
  /* 03 This is a flex item. */
  background: peachpuff;
  border: 4px solid brown;
  height: 100px;
  /* 04 "flex" determinates how the item will grow. */
  /* 05 when the flex parameter is only 1, its actually "flex: 1 1 0%" */
  /* 06 flex: grow-shrink-basis. */
  flex: 1;
}
.flex-properties{
  display: flex;
}
.flex-properties div{
  border: 4px solid black;
  height: 80px;
  width: 300px;
  flex: 1 1 auto;
}
.flex-properties .flex-grow{
  /* 07 "flex-grow" is the growth factor compare to the others items. */
  flex-grow: 2;
}
.flex-properties .flex-shrink{
  /* 08 "flex-shrink" is the shrink factore, at 0 it will keep the assigned width. */
  flex-shrink: 0;
}
.flex-properties .flex-basis{
  /* 09 "flex-basis" set the initial size of the item. */
  /* 10 if basis is set to auto, it will look for a width parameter. */
  flex-basis: 10%;
}
.axes {
  height: 200px;
  border: solid black;
  background: #FFFFF0;
  display: flex;
  /* 11 "flex-direction" determinates the flow direction of the content objects. */
  /* 12 "row" set the direction to horizontal. */
  /* 13 "colum" set the direction to veritcal. */
  flex-direction: column;
  /* 14 "justify-content" change the space the items will have between each other and the border. */
  justify-content: center;
  /* 15 "align-items" set the position the items will hold. */
  align-items: center;
  /* 16 "gap" set the space between the items with each other. */
  gap: 20px;
}
.toColum {
  height: 50px;
  width: 50px;
  border: solid black;
  flex: 0 1 auto;
}
